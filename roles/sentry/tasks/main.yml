---
- name: create sentry system user
  user: name=sentry home={{ sentry_root}} shell=/bin/bash state=present

- name: create sentry database user
  postgresql_user: user=sentry role_attr_flags=CREATEDB,SUPERUSER state=present
  become: yes
  become_user: postgres
  become_method: sudo

- name: create sentry database
  postgresql_db: name=sentry owner=sentry state=present
  become: yes
  become_user: postgres
  become_method: sudo

- name: upgrade pip package
  pip: name=pip version=9.0.1 virtualenv={{ sentry_root }}/env.d/
  become: yes
  become_user: sentry
  become_method: sudo

- name: install sentry package
  pip: name=sentry version=8.17.0 virtualenv={{ sentry_root }}/env.d/
  become: yes
  become_user: sentry
  become_method: sudo
  notify:
    - restart sentry

- name: install sentry plugins package
  pip: name=sentry-plugins version=8.17.0 virtualenv={{ sentry_root }}/env.d/
  become: yes
  become_user: sentry
  become_method: sudo
  notify:
    - restart sentry

- name: install sentry google apps auth package
  pip: name=sentry-auth-google version=0.1.0 virtualenv={{ sentry_root }}/env.d/
  become: yes
  become_user: sentry
  become_method: sudo
  when: sentry_google_client_id is defined
  notify:
    - restart sentry

- name: create sentry config directory
  file: path=/etc/sentry state=directory owner=root group=root mode=0755

- name: install configuration files
  template: src={{ item }}.j2 dest=/etc/sentry/{{ item }} owner=root
    group=root mode=0644
  with_items:
    - config.yml
    - sentry.conf.py
  notify:
    - restart sentry

- name: install sentry upstart configuration
  template: src=init/{{ item }}.conf.j2 dest=/etc/init/{{ item }}.conf
    owner=root group=root mode=0644
  with_items: "{{ sentry_services }}"
  notify:
    - restart sentry

- name: stop retired services
  service: name={{ item }} state=stopped
  with_items: "{{ sentry_retired_services }}"
  ignore_errors: yes
  notify:
    - remove retired upstart configuration

- name: install sentry vhost
  template: src=sentry.vhost.j2 dest=/etc/nginx/vhosts/sentry
    owner=root group=root mode=0644
  notify:
    - restart nginx

- name: install sentry crontab
  template: src=sentry.crontab dest=/etc/cron.d/sentry
    owner=root group=root mode=0644

- name: run sentry migrations
  shell: SENTRY_CONF=/etc/sentry {{ sentry_root }}/env.d/bin/sentry upgrade
    --noinput
  become: yes
  become_user: sentry
  become_method: sudo
  notify:
    - restart sentry

- name: start sentry
  service: name={{ item }} state=started enabled=yes
  with_items: "{{ sentry_services }}"
